// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Location {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  lat       Float?
  lng       Float?
  address   String
  customers Customer[]
  Shop      Shop[]
}

model Shop {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  logo       String?
  products   Product[]
  location   Location  @relation(fields: [locationId], references: [id])
  locationId String    @db.ObjectId
}

model Product {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            String
  price           Int
  shop            Shop             @relation(fields: [shopId], references: [id], onDelete: Cascade)
  shopId          String           @db.ObjectId
  picture         String?
  orderedProducts ProductInOrder[]
}

model ProductInOrder {
  id        String  @id @default(auto()) @map("_id") @db.ObjectId
  product   Product @relation(fields: [productId], references: [id])
  productId String  @db.ObjectId
  quantity  Int
  Order     Order?  @relation(fields: [orderId], references: [id])
  orderId   String? @db.ObjectId
}

model Customer {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  email       String
  phoneNumber String
  name        String
  location    Location? @relation(fields: [locationId], references: [id])
  locationId  String?   @db.ObjectId
  Order       Order[]
  address     String
}

enum Status {
  Creation
  InTransit
  Received
}

model Order {
  id         String           @id @default(auto()) @map("_id") @db.ObjectId
  products   ProductInOrder[]
  customer   Customer         @relation(fields: [customerId], references: [id])
  customerId String           @db.ObjectId
  status     Status
}
